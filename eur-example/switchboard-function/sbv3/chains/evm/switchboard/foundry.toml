[profile.default]
src = 'src'                                              # the source directory
test = 'test'                                            # the test directory
out = 'out'                                              # the output directory (for artifacts)
libs = ['lib']                                           # a list of library directories
force = true                                             # whether to ignore the cache (clean build)
evm_version = 'london'                                   # the evm version (by hardfork name)
optimizer_runs = 999999                                  # the number of optimizer runs
verbosity = 2                                            # the verbosity of tests
fuzz = { runs = 256 }                                    # the number of fuzz runs for tests
invariant = { runs = 256 }                               # the number of runs that must execute for each invariant test group
ffi = true                                               # whether to enable foreign function interface (ffi) cheatcodes or not
sender = '0x00a329c0648769a73afac7f9381e08fb43dbea72'    # the address of `msg.sender` in tests
tx_origin = '0x00a329c0648769a73afac7f9381e08fb43dbea72' # the address of `tx.origin` in tests
initial_balance = '0xffffffffffffffffffffffff'           # the initial balance of the test contract
block_number = 0                                         # the block number we are at in tests
chain_id = 99                                            # the chain id we are on in tests
gas_limit = 9223372036854775807                          # the gas limit in tests
solc = "0.8.17"
gas_reports = ["*"]

## optimizer details for the default profile
[profile.default.optimizer_details]
constantOptimizer = true # whether to enable the optimizer for literal numbers and strings or not
yul = true               # whether to enable the new Yul optimizer or not

# sets the `yulDetails` of the `optimizer_details` for the `default` profile
[profile.default.optimizer_details.yulDetails]
stackAllocation = true               # whether to enable the improvement of allocation of stack slots for variables or not
optimizerSteps = 'dhfoDgvulfnTUtnIf' # the optimization steps to be applied
