# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: Publish Docker images

on:
  workflow_dispatch:
  push:
    branches:
    - main
    paths:
    - ".github/workflows/build-and-publish-docker.yml"
    - "docker/**"

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
        - dockerfile: ./docker/Dockerfile.gramine
          image: switchboardlabs/gramine
        - dockerfile: ./docker/Dockerfile.sgx-function
          image: switchboardlabs/sgx-function
        - dockerfile: ./docker/Dockerfile.solana
          image: switchboardlabs/solana-dev
    steps:
    - uses: actions/checkout@v3
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_CI_USERNAME }}
        password: ${{ secrets.DOCKERHUB_CI_TOKEN }}
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        version: "lab:latest"
        driver: cloud
        endpoint: "switchboardlabs/default"
    - name: Set up tags
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ matrix.image }}
        flavor: |
          latest=false
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
        labels: |
          org.opencontainers.image.vendor=SwitchboardLabs
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./docker
        file: ${{ matrix.dockerfile }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=registry,ref=${{ matrix.image }}:buildcache
        cache-to: type=registry,ref=${{ matrix.image }}:buildcache,mode=max
