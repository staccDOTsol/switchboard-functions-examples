name: CI

on:
  workflow_dispatch:
  push:
    branches: ["main"]
  pull_request:
    types: [opened, synchronize]

jobs:
  javascript-libraries:
    name: Javascript Libraries
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 2
        submodules: recursive
    - name: Setup Workspace
      uses: ./.github/actions/setup-workspace
    - name: Build
      run: turbo run build --filter=./javascript/*
    - name: Lint
      run: turbo run lint --filter=./javascript/*
    - name: Test
      run: turbo run test --filter=./javascript/* --filter=!'@switchboard-xyz/solana.js'
  rust-libraries:
    name: ${{ matrix.crate }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
        - crate: switchboard-common
          features: all
        - crate: switchboard-utils
          features: default
        - crate: switchboard-container-utils
          features: default
        - crate: switchboard-solana
          features: all
        - crate: switchboard-evm
          features: all
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 2
        submodules: recursive
    - name: Setup Rust
      uses: moonrepo/setup-rust@v1
      with:
        inherit-toolchain: true
        components: rustfmt, clippy
    - name: Optional, Setup Payer Secret
      if: matrix.crate == 'switchboard-solana'
      run: |
        mkdir -p ~/.config/solana
        echo "${{ secrets.SOLANA_DEVNET_PAYER_SECRET }}" > ~/.config/solana/id.json
    - name: Setup cache
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-${{ matrix.crate }}-${{ hashFiles(format('rust/{0}/Cargo.toml', matrix.crate), format('rust/{0}/Cargo.lock', matrix.crate), format('rust/{0}/src/**', matrix.crate)) }}
        path: ./rust/${{ matrix.crate }}/target
        restore-keys: |
          ${{ runner.os }}-${{ matrix.crate }}-${{ hashFiles(format('rust/{0}/Cargo.toml', matrix.crate), format('rust/{0}/Cargo.lock', matrix.crate), format('rust/{0}/src/**', matrix.crate)) }}
          ${{ runner.os }}-${{ matrix.crate }}-
    - name: Build, Lint, & Test
      working-directory: ./rust/${{ matrix.crate }}
      run: |
        cargo build --features ${{ matrix.features }}
        cargo fmt --all -- --check
        cargo test --features ${{ matrix.features }} -- --nocapture
  rust-applications:
    name: ${{ matrix.component }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
        - component: QVN
          dockerfile: ./apps/quote-verification-oracle/Dockerfile
          image: switchboard-xyz/qvn
        - component: Function Manager
          dockerfile: ./apps/function-manager/Dockerfile
          image: switchboard-xyz/function-manager
    timeout-minutes: 15
    steps:
    - uses: actions/checkout@v3
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_CI_USERNAME }}
        password: ${{ secrets.DOCKERHUB_CI_TOKEN }}
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        version: "lab:latest"
        driver: cloud
        endpoint: "switchboardlabs/default"
    - name: Build ${{ matrix.component }}
      uses: docker/build-push-action@v5
      with:
        context: ./
        file: ${{ matrix.dockerfile }}
        push: false
        cache-from: type=registry,ref=@${{ matrix.image }}:buildcache
